{"version":3,"sources":["script.js"],"names":["guessedWord","words","regExprson","tilesRow","tileBoxes","document","querySelector","guessWord","randomWord","length","hintElement","maxWords","Math","floor","random","setTimeout","textContent","classList","add","window","addEventListener","e","letter","key","toLocaleUpperCase","dataset","letters","removeLetter","test","addLetter","checkWord","toggleBtn","querySelectorAll","colorSchemeMedia","matchMedia","tileIndex","slice","children","state","firstElementChild","inputLet","remove","i","rowLettersChecking","returnState","index","guessLetter","toUpperCase","indexOf","tileState","letterState","checkWin","indexOfTile","winMsg","alert","updateRow","rowTiles","_loop","concat","forEach","radio","currentTarget","id","documentElement","darkToggle","Array","prototype","find","call","toggle","matches","checked"],"mappings":"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","file":"script.js","sourcesContent":["const words = [\r\n\t[\r\n\t\t\"raise\", \"Elevate\"\r\n\t],[\r\n\t\t\"claim\", \"Allegation\"\r\n\t],[\r\n\t\t\"blame\", \"Fault\"\r\n\t], [\r\n\t\t\"pride\", \"Deadly sin\"\r\n\t], [\r\n\t\t\"broad\", \"large\"\r\n\t]\r\n]\r\nconst regExprson = /^[A-Z]$/\r\nlet tilesRow = 1;\r\nlet guessedWord;\r\nlet tileBoxes = document.querySelector('#tiles1');\r\n\r\nconst guessWord = randomWord(words.length);\r\nconst hintElement = document.querySelector('.word-hint');\r\n\r\nfunction randomWord(maxWords){\r\n\tconst randomWord = words[Math.floor(Math.random() * maxWords)];\r\n\tsetTimeout(() => {\r\n\t\thintElement.textContent += randomWord[1];\r\n\t\thintElement.classList.add(\"hint-box\");\r\n\t}, 500);\r\n\treturn randomWord[0];\r\n}\r\n\r\nwindow.addEventListener('keydown', e => {\r\n\tconst letter = e.key.toLocaleUpperCase();\r\n\r\n\tif(tileBoxes){\r\n\t\tif(letter === \"BACKSPACE\" && tileBoxes.dataset.letters != \"\"){\r\n\t\t\tremoveLetter();\r\n\t\t}else if (tileBoxes.dataset.letters.length < 5 && regExprson.test(letter)){\r\n\t\t\taddLetter(letter);\r\n\t\t}else if(tileBoxes.dataset.letters.length == 5 && letter === \"ENTER\"){\r\n\t\t\tcheckWord();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nconst toggleBtn = document.querySelectorAll('.mode-toggle input[type=\"radio\"]');\r\nconst colorSchemeMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\ntoggleBtn.forEach(radio => {\r\n\tradio.addEventListener(\"change\", e => {\r\n\t\tconst radioBtn = e.currentTarget;\r\n\t\tradioBtn.id == \"dark\" ? document.documentElement.classList.add(\"darkmode\") : document.documentElement.classList.remove(\"darkmode\");\r\n\t});\r\n});\r\n\r\ncolorSchemeMedia.addEventListener(\"change\", e => {\r\n\tconst darkToggle =  Array.prototype.find.call(toggleBtn, toggle => toggle.id == \"dark\");\r\n\r\n\tif(e.matches){\r\n\t\tdocument.documentElement.classList.add(\"darkmode\");\r\n\t\tdarkToggle.checked = true;\r\n\t}else{\r\n\t\tdocument.documentElement.classList.remove(\"darkmode\")\r\n\t\tdarkToggle.checked = false;\r\n\t}\r\n});\r\n\r\nfunction removeLetter(){\r\n\tconst tileIndex = tileBoxes.dataset.letters.length - 1;\r\n\ttileBoxes.dataset.letters = tileBoxes.dataset.letters.slice(0, -1);\r\n\ttileBoxes.children[tileIndex].dataset.state = \"empty\";\r\n\ttileBoxes.children[tileIndex].firstElementChild.textContent = \"\";\r\n}\r\n\r\nfunction addLetter(inputLet){\r\n\tconst tileIndex = tileBoxes.dataset.letters.length;\r\n\ttileBoxes.children[tileIndex].firstElementChild.textContent = inputLet;\r\n\ttileBoxes.dataset.letters += inputLet;\r\n\ttileBoxes.children[tileIndex].dataset.state = \"added\"\r\n\ttileBoxes.children[tileIndex].classList.add('pop-in');\r\n\tsetTimeout(() => {\r\n\t\ttileBoxes.children[tileIndex].classList.remove(\"pop-in\");\r\n\t}, 105)\r\n}\r\n\r\nfunction checkWord(){\r\n\tfor(let i=0; i < 5; i++){\r\n\t\trowLettersChecking(i, tileBoxes);\r\n\t}\r\n}\r\n\r\nfunction returnState(index){\r\n\tconst guessLetter = guessWord.toUpperCase();\r\n\tconst guessedWord = tileBoxes.dataset.letters;\r\n\r\n\tif(guessedWord[index] == guessLetter[index]){\r\n\t\treturn \"found\";\r\n\t}else{\r\n\t\treturn  guessLetter.indexOf(guessedWord[index]) > -1 ? \"misplaced\" : \"absent\";\r\n\t}\r\n}\r\n\r\nfunction tileState(letterState, state){\r\n\tletterState.classList.add(\"flip-in\");\r\n\t\tsetTimeout(() => {\r\n\t\t\tletterState.dataset.state = state;\r\n\t\t\tletterState.classList.remove(\"flip-in\");\r\n\t\t\tletterState.classList.add(\"flip-out\");\r\n\t\t}, 250);\r\n\tsetTimeout(() => letterState.classList.remove(\"flip-out\"), 1250);\r\n}\r\n\r\nfunction checkWin(indexOfTile){\r\n\tif(guessWord.toUpperCase() === tileBoxes.dataset.letters){\r\n\t\twinMsg();\r\n\t}else if (tilesRow + 1 > 6) {\r\n\t\ttileBoxes = null;\r\n\t\tsetTimeout(() => {\r\n\t\t\talert(\"You ran out of guesses. The correct answer was \" + guessWord);\r\n\t\t}, 1000);\r\n\t}else{\r\n\t\tupdateRow();\r\n\t}\r\n}\r\n\r\nfunction rowLettersChecking(tileIndex, rowTiles){\r\n\tsetTimeout(() => {\r\n\t\ttileState(rowTiles.children[tileIndex], returnState(tileIndex));\r\n\t\ttileIndex == 4 && checkWin();\r\n\t}, 250 * tileIndex);\r\n}\r\n\r\nfunction winMsg(){\r\n\tfor(let i = 0; i < 5; i++){\r\n\t\tsetTimeout(() => {\r\n\t\t\ttileBoxes.children[i].classList.add(\"leap\");\r\n\t\t\ti == 4 ? tileBoxes = null: \"\";\r\n\t\t}, 250 * i);\r\n\t}\r\n}\r\n\r\nfunction updateRow(){\r\n\t++tilesRow;\r\n\ttileBoxes = document.querySelector(`#tiles${tilesRow}`);\r\n}"]}