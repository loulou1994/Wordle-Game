{"version":3,"sources":["script.js"],"names":["guessedWord","guessWord","words","regExprson","tilesRow","tileBoxes","document","querySelector","randomWord","length","window","addEventListener","e","letter","key","toLocaleUpperCase","dataset","letters","removeLetter","test","addLetter","checkWord","toggleBtn","querySelectorAll","colorSchemeMedia","matchMedia","maxWords","Math","floor","random","tileIndex","slice","children","state","firstElementChild","textContent","inputLet","classList","add","setTimeout","remove","i","rowLettersChecking","returnState","index","guessLetter","toUpperCase","indexOf","tileState","letterState","checkWin","indexOfTile","winMsg","alert","updateRow","rowTiles","_loop","concat","forEach","radio","currentTarget","id","documentElement","darkToggle","Array","prototype","find","call","toggle","matches","checked"],"mappings":"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","file":"script.js","sourcesContent":["const words = [\"raise\", \"claim\", \"blame\", \"proud\", \"broad\"]\r\nconst regExprson = /^[A-Z]$/\r\n\r\nlet tilesRow = 1;\r\nlet guessedWord, guessWord;\r\nlet tileBoxes = document.querySelector('#tiles1');\r\n\r\nrandomWord(words.length);\r\n\r\nwindow.addEventListener('keydown', e => {\r\n\tconst letter = e.key.toLocaleUpperCase();\r\n\r\n\tif(tileBoxes){\r\n\t\tif(letter === \"BACKSPACE\" && tileBoxes.dataset.letters != \"\"){\r\n\t\t\tremoveLetter();\r\n\t\t}else if (tileBoxes.dataset.letters.length < 5 && regExprson.test(letter)){\r\n\t\t\taddLetter(letter);\r\n\t\t}else if(tileBoxes.dataset.letters.length == 5 && letter === \"ENTER\"){\r\n\t\t\tcheckWord();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nconst toggleBtn = document.querySelectorAll('.mode-toggle input[type=\"radio\"]');\r\nconst colorSchemeMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\ntoggleBtn.forEach(radio => {\r\n\tradio.addEventListener(\"change\", e => {\r\n\t\tconst radioBtn = e.currentTarget;\r\n\t\tradioBtn.id == \"dark\" ? document.documentElement.classList.add(\"darkmode\") : document.documentElement.classList.remove(\"darkmode\");\r\n\t});\r\n});\r\n\r\ncolorSchemeMedia.addEventListener(\"change\", e => {\r\n\tconst darkToggle =  Array.prototype.find.call(toggleBtn, toggle => toggle.id == \"dark\");\r\n\r\n\tif(e.matches){\r\n\t\tdocument.documentElement.classList.add(\"darkmode\");\r\n\t\tdarkToggle.checked = true;\r\n\t}else{\r\n\t\tdocument.documentElement.classList.remove(\"darkmode\")\r\n\t\tdarkToggle.checked = false;\r\n\t}\r\n});\r\n\r\nfunction randomWord(maxWords){\r\n\tguessWord = words[Math.floor(Math.random() * maxWords)];\r\n}\r\n\r\nfunction removeLetter(){\r\n\tconst tileIndex = tileBoxes.dataset.letters.length - 1;\r\n\ttileBoxes.dataset.letters = tileBoxes.dataset.letters.slice(0, -1);\r\n\ttileBoxes.children[tileIndex].dataset.state = \"empty\";\r\n\ttileBoxes.children[tileIndex].firstElementChild.textContent = \"\";\r\n}\r\n\r\nfunction addLetter(inputLet){\r\n\tconst tileIndex = tileBoxes.dataset.letters.length;\r\n\ttileBoxes.children[tileIndex].firstElementChild.textContent = inputLet;\r\n\ttileBoxes.dataset.letters += inputLet;\r\n\ttileBoxes.children[tileIndex].dataset.state = \"added\"\r\n\ttileBoxes.children[tileIndex].classList.add('pop-in');\r\n\tsetTimeout(() => {\r\n\t\ttileBoxes.children[tileIndex].classList.remove(\"pop-in\");\r\n\t}, 105)\r\n}\r\n\r\nfunction checkWord(){\r\n\tfor(let i=0; i < 5; i++){\r\n\t\trowLettersChecking(i, tileBoxes);\r\n\t}\r\n}\r\n\r\nfunction returnState(index){\r\n\tconst guessLetter = guessWord.toUpperCase();\r\n\tconst guessedWord = tileBoxes.dataset.letters;\r\n\r\n\tif(guessedWord[index] == guessLetter[index]){\r\n\t\treturn \"found\";\r\n\t}else{\r\n\t\treturn  guessLetter.indexOf(guessedWord[index]) > -1 ? \"misplaced\" : \"absent\";\r\n\t}\r\n}\r\n\r\nfunction tileState(letterState, state){\r\n\tletterState.classList.add(\"flip-in\");\r\n\t\tsetTimeout(() => {\r\n\t\t\tletterState.dataset.state = state;\r\n\t\t\tletterState.classList.remove(\"flip-in\");\r\n\t\t\tletterState.classList.add(\"flip-out\");\r\n\t\t}, 250);\r\n\tsetTimeout(() => letterState.classList.remove(\"flip-out\"), 1250);\r\n}\r\n\r\nfunction checkWin(indexOfTile){\r\n\tif(guessWord.toUpperCase() === tileBoxes.dataset.letters){\r\n\t\twinMsg();\r\n\t}else if (tilesRow + 1 > 6) {\r\n\t\ttileBoxes = null;\r\n\t\tsetTimeout(() => {\r\n\t\t\talert(\"You ran out of guesses. The correct answer was \" + guessWord);\r\n\t\t}, 1000);\r\n\t}else{\r\n\t\tupdateRow();\r\n\t}\r\n}\r\n\r\nfunction rowLettersChecking(tileIndex, rowTiles){\r\n\tsetTimeout(() => {\r\n\t\ttileState(rowTiles.children[tileIndex], returnState(tileIndex));\r\n\t\ttileIndex == 4 && checkWin();\r\n\t}, 250 * tileIndex);\r\n}\r\n\r\nfunction winMsg(){\r\n\tfor(let i = 0; i < 5; i++){\r\n\t\tsetTimeout(() => {\r\n\t\t\ttileBoxes.children[i].classList.add(\"leap\");\r\n\t\t\ti == 4 ? tileBoxes = null: \"\";\r\n\t\t}, 250 * i);\r\n\t}\r\n}\r\n\r\nfunction updateRow(){\r\n\t++tilesRow;\r\n\ttileBoxes = document.querySelector(`#tiles${tilesRow}`);\r\n}"]}